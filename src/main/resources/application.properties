# Application properties to be used in local/development environments
# Run property 'spring.profiles.active' must be set to 'local' to use these properties during execution
# (i.e. set VM options in Intellij run configurations as -Dspring.profiles.active=local )

# Define a custom port instead of the default 8082
server.port=${ODS_TRANSFER_APP_PORT:8082}
redirect.uri.string=http://localhost:8080

#Credential Service Url
cred.service.uri=${ODS_CRED_URI:http://localhost:8081/endpoint-cred}

#TransferQ Service url
transfer.queueing.service.url=${ODS_TRANSFERQ_SERVICE_URL:http://localhost:8084/transferq}

redirect.uri=${ODS_REDIRECT_URI:http://localhost:${server.port}}
complete.oauth.uri=complete-oauth

#Private key for ods
ods.rsa.private.key=${ODS_RSA_PRIVATE_KEY}

# Dropbox config
dropbox.redirectUri=${redirect.uri}/api/dropbox/${complete.oauth.uri}
dropbox.identifier=${ODS_DROPBOX_IDENTIFIER:OneDataShare-DIDCLab}
dropbox.key=${ODS_DROPBOX_KEY}
dropbox.secret=${ODS_DROPBOX_SECRET}

# Google config
# Google config
gdrive.appName=OneDataShare
gdrive.authUri=https://accounts.google.com/o/oauth2/auth
gdrive.tokenUri=https://accounts.google.com/o/oauth2/token
gdrive.authProviderUri=https://www.googleapis.com/oauth2/v1/certs
gdrive.redirectUri=${redirect.uri}/api/oauth/gdrive
gdrive.projectId=${ODS_GDRIVE_PROJECT_ID}
gdrive.clientId=${ODS_GDRIVE_CLIENT_ID}
gdrive.clientSecret=${ODS_GDRIVE_CLIENT_SECRET}

# Box config
box.authUri=https://account.box.com/api/oauth2/authorize
box.scope=root_readwrite
box.redirectUri=${redirect.uri}/api/box/${complete.oauth.uri}
box.clientId=${BOX_CLIENT_ID}
box.clientSecret=${BOX_CLIENT_SECRET}

#GridFTP settings
gsiftp.redirectUri=${redirect.uri}/api/gsiftp/${complete.oauth.uri}
gsiftp.clientId=${ODS_GSIFTP_CLIENT_ID}
gsiftp.clientSecret=${ODS_GSIFTP_CLIENT_SECRET}

# Database settings
spring.data.mongodb.database=onedatashare

#This is the Dockerfile uri
spring.data.mongodb.host=${MONGO_DB_HOST:localhost}
#logging.file=${HOME}/logs/application.log
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR

#For not sending null data
spring.jackson.default-property-inclusion=NON_NULL

# JWT
springbootwebfluxjjwt.password.encoder.secret=${ODS_JWT_PASS_ENC_SECRET}
springbootwebfluxjjwt.password.encoder.iteration=${ODS_JWT_PASS_ENC_ITR}
springbootwebfluxjjwt.password.encoder.keylength=${ODS_JWT_PASS_ENC_LEN}
springbootwebfluxjjwt.jjwt.secret=${ODS_JWT_SECRET}